Date = as.Date(trimws(paste(substr("created_at",4, 10), "2017")), "%b %d %Y")
, "num" = 1
) #%>%
View(trump_tweet_frequency)
detach("package:dplyr", unload=TRUE)
detach("package:plyr", unload=TRUE)
library(plyr)
library(jsonlite)
library(httr)
library(dplyr)
library(tidyr)
library(stringr)
#Donald Trump's Twitter data from 2017
trump_tweets <- read_json("data/2017_trump_twitter.json", simplifyVector = TRUE)
trump_tweets <- trump_tweets %>%
select(created_at,
text,
retweet_count,
favorite_count,
is_retweet)
#Donald Trump's approval rating
trump_approval <- read.csv("data/approval_polllist.csv", stringsAsFactors = FALSE)
trump_approval <- trump_approval %>%
select(poll_id,
startdate,
enddate,
pollster,
grade,
samplesize,
approve,
disapprove,
url)
summary_twitter <- trump_tweets %>%
summarize(
"Total Tweets" = nrow(trump_tweets),
"Tweets from Trump" = nrow(trump_tweets) - sum(is_retweet),
"Average Retweet Count" = round(mean(retweet_count), digits = 0),
"Average Favorite Count" = mean(favorite_count)
)
#General Averages
# Returns the most common value from data set -- adapted from https://www.tutorialspoint.com/r/r_mean_median_mode.htm
find_mode <- function(data) {
unique <- unique(data)
unique[which.max(tabulate(match(data, unique)))]
}
average_tweets <-mean(trump_tweets$retweet_count)
pollsters <- as.data.frame(unique(trump_approval$pollster))
summary_approval <- trump_approval %>%
summarize(
"Total Pollsters" = nrow(pollsters),
"Most Common Grade" = find_mode(grade),
"Average Approval" = round(mean(approve), digits = 1),
"Max Approval" = round(max(approve), digits = 1),
"Min Approval" = round(min(approve), digits = 1),
"Standard Deviation of Approval" = round(sd(approve), digits = 1),
"Average Disapproval" = round(mean(disapprove), digits = 1),
"Max Dissapproval" = round(max(disapprove), digits = 1),
"Min Dissapproval" = round(min(disapprove), digits = 1),
"Standard Deviation of Dissapproval" = round(sd(disapprove), digits = 1)
)
#Answering critical question #1
trump_tweets_russia <- filter(trump_tweets, str_detect(trump_tweets$text, "Russia"))
trump_tweets_russia <- head(trump_tweets_russia, 5)
trump_tweets_russia <- trump_tweets_russia %>%
select("Date" = created_at,
"Tweet" = text,
"Is A Retweet" = is_retweet,
"Retweets" = retweet_count,
"Favorites" = favorite_count) %>%
head(5)
#Answering critical question #3
trump_tweets_democrats<- filter(trump_tweets, str_detect(trump_tweets$text, "Democrat"))
trump_tweets_democrats<- head(trump_tweets_democrats, 5)
trump_tweets_democrats <- trump_tweets_democrats %>%
select("Date" = created_at,
"Tweet" = text,
"Is A Retweet" = is_retweet,
"Retweets" = retweet_count,
"Favorites" = favorite_count) %>%
head(5)
average_12_31<- trump_approval[1343:1345,]
average_12_31<- mean(average_12_31$approve)
print(average_12_31)
#Answering critical question #2
trump_origin_tweets <- filter(trump_tweets, is_retweet == FALSE)
words <- tolower(paste(trump_origin_tweets$text, collapse=" "))
word_list <- strsplit(words, " ")
sorted_words <- sort(table(word_list), decreasing = TRUE)
top_100_words <- head(as.data.frame(sorted_words), 100)
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
mutate(
Date = as.Date(trimws(paste(substr(created_at,4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarize(Frequency = sum(num))
setwd("~/Desktop/GitHub/INFO-201-Final-Project")
runApp()
runApp()
shiny::runApp()
setwd("~/Desktop/GitHub/INFO-201-Final-Project")
runApp()
detach("package:plyr", unload=TRUE)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
mutate(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarise(Frequency = sum(num))
View(trump_tweet_frequency)
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
mutate_(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarise(Frequency = sum(num))
library(plyr)
library(jsonlite)
library(httr)
library(dplyr)
library(stringr)
library(tidyr)
detach("package:plyr", unload=TRUE)
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
dplyr::mutate(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) #%>%
View(trump_tweet_frequency)
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
dplyr::mutate(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarise(Frequency = sum(num))
View(trump_tweet_frequency)
# A data frame representing Trump's average daily approval ratings during 2017.
# The date in the new data frame is the same as the 'enddate' in the trump_approval data frame.
trump_daily_approval <- trump_approval %>%
dplyr::mutate(
Date = as.Date(enddate, "%m/%d/%y")
) %>%
group_by(Date) %>%
summarize(approve = mean(approve),disapprove = mean(disapprove))
runApp()
library("shiny")
library("plyr")
library("dplyr")
library("ggplot2")
library("tidyr")
library("maps")
library("DT")
runApp()
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
dplyr::mutate(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarise(Frequency = sum(num))
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
dplyr::mutate(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
dplyr::summarise(Frequency = sum(num))
(approve = mean(approve),disapprove = mean(disapprove))
# A data frame representing Trump's average daily approval ratings during 2017.
# The date in the new data frame is the same as the 'enddate' in the trump_approval data frame.
trump_daily_approval <- trump_approval %>%
dplyr::mutate(
Date = as.Date(enddate, "%m/%d/%y")
) %>%
group_by(Date) %>%
dplyr::summarize(approve = mean(approve),disapprove = mean(disapprove))
runApp()
library(plyr)
library(jsonlite)
library(httr)
library(dplyr)
library(stringr)
library(tidyr)
library("shiny")
library("plyr")
library("dplyr")
library("ggplot2")
library("tidyr")
library("maps")
library("DT")
runApp()
setwd("~/Desktop/GitHub/INFO-201-Final-Project")
runApp()
library("shiny")
library("plyr")
library("dplyr")
library("ggplot2")
library("tidyr")
library("maps")
library("DT")
# Gives us access to the data and analysis from a6
source("analysis_a6.R")
page_one <- tabPanel(
"Overview",
titlePanel("Trump's tweets and his approval rating during 2017"),
p("by Roshni Sinha, Michelle Ponting, Andy Straavaldson and John Reese -- Group AA2"),
p("Donald Trump often takes to Twitter to share his thoughts with the American public.
As president of the United States, his duties and the perception of the American public are often
intertwined. Twitter, a social media platform used to share short posts, acts as a means of communication
between Trump and both his supporters and rivals, allowing others an insight to his mind and life in the
Oval Office. In this assignment, we will analyze the effect Trump's tweets had on his approval rating
in 2017. By comparing these two sets of data, we can gain broader knowledge of how social media is
used in politics.")
)
page_two <- tabPanel(
"Tweet interaction based on key words",
titlePanel("How using certain key words affect the amount of interactions a tweet gets"),
p("This will show which topics bring in the most likes and retweets among twitter users, and
will show which topics spark the most conversation and activity on twitter and what topics people
care the most about")
)
page_three <- tabPanel(
"Twitter Activity Analysis",
titlePanel("Analysis of President Trump's Twitter Activity in 2017"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "month",
label = "Month",
min = 1,
max = 12,
value = 1,
ticks = FALSE
),
h2(textOutput("monthname"))
),
mainPanel(
plotOutput("plotmontlytweets"),
h1(textOutput("twitterdata")),
tableOutput("tablemonthlytweets")
)
)
)
page_four <- tabPanel(
"Approval Rating and Tweeting Frequency", # Label for the tab in the navbar
titlePanel("How did changes in Trump's approval/disapproval rating affect how often he tweeted?"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "approve", label = "Metric",choices = c("approve","disapprove")),
textOutput(outputId = "corr"),
p(""),
p("As can be seen, there exists a weak negative correlation between both Trump's
approval rating and tweeting frequency and a weak positive correlation between Trump's
disapproval rating and his tweeting frequency. Interestingly, the former correlation is stronger
than the latter. Perhaps this indicates that Trump pays more attention to his approval ratings than
his dissaproval ratings.")
),
mainPanel(
plotOutput(outputId = "frequency_plot"),
plotOutput(outputId = "date_plot"),
p(""),
p("- The frequency is the number of times that Donald Trump tweeted in a day"),
p("- The approval rating is average of all approval ratings released in a day.")
)
)
)
page_five <- tabPanel(
"Russia"
)
my_ui <- navbarPage(
"Tweets of Approval",
page_one,
page_two,
page_three,
page_four,
page_five
)
output$frequency_plot <- renderPlot({
ggplot(data = daily_approval_and_frequency,mapping = aes_string(x = "Frequency", y = input$approve)) +
geom_point() +
geom_smooth(method = "lm")
})
output$date_plot <- renderPlot({
apr <- toString(input$approve)
ggplot(data = daily_approval_and_frequency)+
geom_point(mapping = aes_string(x = "Date", y = apr, color = "Frequency"))
})
output$corr <- renderText({
tex <- ""
if (input$approve == "approve") {
x <- as.numeric(daily_approval_and_frequency$approve)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between approval rating and frequency is", paste0(freq_cor, "."))
} else {
x <- as.numeric(daily_approval_and_frequency$disapprove)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between disapproval rating and frequency is", paste0(freq_cor, "."))
}
tex
})
# Michelle Q data
output$plotmontlytweets <- renderPlot({
data <- twitter_data
plot.data <- data %>% filter(month == input$month)
ggplot(data = plot.data) +
geom_point(mapping = aes(x = day, y = time, color = is_retweet)) +
scale_y_discrete(breaks = NULL) +
labs(
title = paste("All of Donald Trump's Tweets in", month.name[input$month]),
y = "Time of Day (00:00 to 24:00)",
x = "Day of the Month",
color = "Is it a Retweet?"
)
})
output$twitterdata <- renderText({
twitter_info <- get_monthly_info(input$month)
twitter_info
})
output$monthname <- renderText({
month <- month.name[input$month]
month
})
output$tablemonthlytweets <- renderTable({
table <- monthly_tweets
table
})
my_server <- function(input,output) {
output$frequency_plot <- renderPlot({
ggplot(data = daily_approval_and_frequency,mapping = aes_string(x = "Frequency", y = input$approve)) +
geom_point() +
geom_smooth(method = "lm")
})
output$date_plot <- renderPlot({
apr <- toString(input$approve)
ggplot(data = daily_approval_and_frequency)+
geom_point(mapping = aes_string(x = "Date", y = apr, color = "Frequency"))
})
output$corr <- renderText({
tex <- ""
if (input$approve == "approve") {
x <- as.numeric(daily_approval_and_frequency$approve)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between approval rating and frequency is", paste0(freq_cor, "."))
} else {
x <- as.numeric(daily_approval_and_frequency$disapprove)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between disapproval rating and frequency is", paste0(freq_cor, "."))
}
tex
})
# Michelle Q data
output$plotmontlytweets <- renderPlot({
data <- twitter_data
plot.data <- data %>% filter(month == input$month)
ggplot(data = plot.data) +
geom_point(mapping = aes(x = day, y = time, color = is_retweet)) +
scale_y_discrete(breaks = NULL) +
labs(
title = paste("All of Donald Trump's Tweets in", month.name[input$month]),
y = "Time of Day (00:00 to 24:00)",
x = "Day of the Month",
color = "Is it a Retweet?"
)
})
output$twitterdata <- renderText({
twitter_info <- get_monthly_info(input$month)
twitter_info
})
output$monthname <- renderText({
month <- month.name[input$month]
month
})
output$tablemonthlytweets <- renderTable({
table <- monthly_tweets
table
})
}
shinyApp(ui = my_ui, server = my_server)
runApp()
shinyApp(ui = my_ui, server = my_server)
View(twitter_data)
data <- twitter_data
plot.data <- data %>% filter(month == input$month)
runApp()
shinyApp(ui = my_ui, server = my_server)
twitter_data <- as.data.frame(t(as.data.frame(strsplit(trump_tweets$created_at, " "), stringsAsFactors = FALSE)), stringsAsFactors = FALSE)
twitter_data <- twitter_data %>%
mutate(created_at = trump_tweets$created_at) %>%
left_join(trump_tweets, by = "created_at") %>%
select(V2, V3, V6, V4, created_at, text, retweet_count, favorite_count, is_retweet)
twitter_data <- twitter_data %>%
mutate(month = match(twitter_data$V2, month.abb), day = V3, year = V6, time = V4) %>%
select(month, day, year, time, created_at, text, retweet_count, favorite_count, is_retweet)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
View(twitter_data)
View(twitter_data)
runApp()
runApp()
shinyApp(ui = my_ui, server = my_server)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) #%>%
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = nrow()) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = nrow(monthly_tweets)) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweet_count <- group_by(twitter_data, month) %>%
count()
View(monthly_tweet_count)
get_monthly_info <- function(given_month) {
tweets <- monthly_tweet_count$n[monthly_tweet_count$month == given_month]
date <- month.name[given_month]
avg_data <- twitter_data %>%
filter(month == given_month) %>%
summarize(
num_days = as.numeric(max(day)),
total_tweets = as.numeric(n()),
most_retweeted = text[retweet_count == max(retweet_count)][1],
least_retweeted = text[retweet_count == min(retweet_count)][1],
most_favorited = text[favorite_count == max(favorite_count)][1],
least_favorited = text[favorite_count == min(favorite_count)][1]
)
avg_num_tweets <- round(avg_data$total_tweets / avg_data$num_days)
paste0("There were ", tweets, " tweets in ", date,
" 2017, with an average of ", avg_num_tweets, " tweets per day.")
}
runApp()
shinyApp(ui = my_ui, server = my_server)
rlang::last_error()
runApp()
View(monthly_tweet_count)
monthly_tweet_count <- group_by(twitter_data, month) %>%
dplyr::count()
View(monthly_tweet_count)
get_monthly_info <- function(given_month) {
tweets <- monthly_tweet_count$n[monthly_tweet_count$month == given_month]
date <- month.name[given_month]
avg_data <- twitter_data %>%
filter(month == given_month) %>%
summarize(
num_days = as.numeric(max(day)),
total_tweets = as.numeric(n()),
most_retweeted = text[retweet_count == max(retweet_count)][1],
least_retweeted = text[retweet_count == min(retweet_count)][1],
most_favorited = text[favorite_count == max(favorite_count)][1],
least_favorited = text[favorite_count == min(favorite_count)][1]
)
avg_num_tweets <- round(avg_data$total_tweets / avg_data$num_days)
paste0("There were ", tweets, " tweets in ", date,
" 2017, with an average of ", avg_num_tweets, " tweets per day.")
}
month.name(1)
month.name
month.name[1]
runApp()
shinyApp(ui = my_ui, server = my_server)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
dplyr::count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
dplyr::mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
runApp()
runApp()
runApp()
runApp()
