page_four <- tabPanel(
"Approval Rating and Tweeting Frequency", # Label for the tab in the navbar
titlePanel("How did changes in Trump's approval/disapproval rating affect how often he tweeted?"),
sidebarLayout(
sidebarPanel(
radioButtons(inputId = "approve", label = "Metric",choices = c("approve","disapprove")),
textOutput(outputId = "corr"),
p(""),
p("As can be seen, there exists a weak negative correlation between both Trump's
approval rating and tweeting frequency and a weak positive correlation between Trump's
disapproval rating and his tweeting frequency. Interestingly, the former correlation is stronger
than the latter. Perhaps this indicates that Trump pays more attention to his approval ratings than
his dissaproval ratings.")
),
mainPanel(
plotOutput(outputId = "frequency_plot"),
plotOutput(outputId = "date_plot"),
p(""),
p("- The frequency is the number of times that Donald Trump tweeted in a day"),
p("- The approval rating is average of all approval ratings released in a day.")
)
)
)
page_five <- tabPanel(
"Russia"
)
my_ui <- navbarPage(
"Tweets of Approval",
page_one,
page_two,
page_three,
page_four,
page_five
)
output$frequency_plot <- renderPlot({
ggplot(data = daily_approval_and_frequency,mapping = aes_string(x = "Frequency", y = input$approve)) +
geom_point() +
geom_smooth(method = "lm")
})
output$date_plot <- renderPlot({
apr <- toString(input$approve)
ggplot(data = daily_approval_and_frequency)+
geom_point(mapping = aes_string(x = "Date", y = apr, color = "Frequency"))
})
output$corr <- renderText({
tex <- ""
if (input$approve == "approve") {
x <- as.numeric(daily_approval_and_frequency$approve)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between approval rating and frequency is", paste0(freq_cor, "."))
} else {
x <- as.numeric(daily_approval_and_frequency$disapprove)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between disapproval rating and frequency is", paste0(freq_cor, "."))
}
tex
})
# Michelle Q data
output$plotmontlytweets <- renderPlot({
data <- twitter_data
plot.data <- data %>% filter(month == input$month)
ggplot(data = plot.data) +
geom_point(mapping = aes(x = day, y = time, color = is_retweet)) +
scale_y_discrete(breaks = NULL) +
labs(
title = paste("All of Donald Trump's Tweets in", month.name[input$month]),
y = "Time of Day (00:00 to 24:00)",
x = "Day of the Month",
color = "Is it a Retweet?"
)
})
output$twitterdata <- renderText({
twitter_info <- get_monthly_info(input$month)
twitter_info
})
output$monthname <- renderText({
month <- month.name[input$month]
month
})
output$tablemonthlytweets <- renderTable({
table <- monthly_tweets
table
})
my_server <- function(input,output) {
output$frequency_plot <- renderPlot({
ggplot(data = daily_approval_and_frequency,mapping = aes_string(x = "Frequency", y = input$approve)) +
geom_point() +
geom_smooth(method = "lm")
})
output$date_plot <- renderPlot({
apr <- toString(input$approve)
ggplot(data = daily_approval_and_frequency)+
geom_point(mapping = aes_string(x = "Date", y = apr, color = "Frequency"))
})
output$corr <- renderText({
tex <- ""
if (input$approve == "approve") {
x <- as.numeric(daily_approval_and_frequency$approve)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between approval rating and frequency is", paste0(freq_cor, "."))
} else {
x <- as.numeric(daily_approval_and_frequency$disapprove)
y <- as.numeric(daily_approval_and_frequency$Frequency)
freq_cor <- round(cor(x,y),2)
tex <- paste("The correlation between disapproval rating and frequency is", paste0(freq_cor, "."))
}
tex
})
# Michelle Q data
output$plotmontlytweets <- renderPlot({
data <- twitter_data
plot.data <- data %>% filter(month == input$month)
ggplot(data = plot.data) +
geom_point(mapping = aes(x = day, y = time, color = is_retweet)) +
scale_y_discrete(breaks = NULL) +
labs(
title = paste("All of Donald Trump's Tweets in", month.name[input$month]),
y = "Time of Day (00:00 to 24:00)",
x = "Day of the Month",
color = "Is it a Retweet?"
)
})
output$twitterdata <- renderText({
twitter_info <- get_monthly_info(input$month)
twitter_info
})
output$monthname <- renderText({
month <- month.name[input$month]
month
})
output$tablemonthlytweets <- renderTable({
table <- monthly_tweets
table
})
}
shinyApp(ui = my_ui, server = my_server)
runApp()
shinyApp(ui = my_ui, server = my_server)
View(twitter_data)
data <- twitter_data
plot.data <- data %>% filter(month == input$month)
runApp()
<<<<<<< HEAD
>>>>>>> 990812d1392d67c0450568d54f6a2fb802d608af
=======
shinyApp(ui = my_ui, server = my_server)
twitter_data <- as.data.frame(t(as.data.frame(strsplit(trump_tweets$created_at, " "), stringsAsFactors = FALSE)), stringsAsFactors = FALSE)
twitter_data <- twitter_data %>%
mutate(created_at = trump_tweets$created_at) %>%
left_join(trump_tweets, by = "created_at") %>%
select(V2, V3, V6, V4, created_at, text, retweet_count, favorite_count, is_retweet)
twitter_data <- twitter_data %>%
mutate(month = match(twitter_data$V2, month.abb), day = V3, year = V6, time = V4) %>%
select(month, day, year, time, created_at, text, retweet_count, favorite_count, is_retweet)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
View(twitter_data)
View(twitter_data)
>>>>>>> eb7de6fb83fe0bf4c6065ddec0bd1e1380655edb
runApp()
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
table()
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
t()
View(monthly_tweets)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets") %>%
t()
View(monthly_tweets)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets") %>%
filter("Month")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select(Month)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select(Month)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets") %>% t()
runApp()
shinyApp(ui = my_ui, server = my_server)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) #%>%
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = nrow()) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = nrow(monthly_tweets)) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweet_count <- group_by(twitter_data, month) %>%
count()
View(monthly_tweet_count)
get_monthly_info <- function(given_month) {
tweets <- monthly_tweet_count$n[monthly_tweet_count$month == given_month]
date <- month.name[given_month]
avg_data <- twitter_data %>%
filter(month == given_month) %>%
summarize(
num_days = as.numeric(max(day)),
total_tweets = as.numeric(n()),
most_retweeted = text[retweet_count == max(retweet_count)][1],
least_retweeted = text[retweet_count == min(retweet_count)][1],
most_favorited = text[favorite_count == max(favorite_count)][1],
least_favorited = text[favorite_count == min(favorite_count)][1]
)
avg_num_tweets <- round(avg_data$total_tweets / avg_data$num_days)
paste0("There were ", tweets, " tweets in ", date,
" 2017, with an average of ", avg_num_tweets, " tweets per day.")
}
runApp()
shinyApp(ui = my_ui, server = my_server)
rlang::last_error()
runApp()
View(monthly_tweet_count)
monthly_tweet_count <- group_by(twitter_data, month) %>%
dplyr::count()
View(monthly_tweet_count)
get_monthly_info <- function(given_month) {
tweets <- monthly_tweet_count$n[monthly_tweet_count$month == given_month]
date <- month.name[given_month]
avg_data <- twitter_data %>%
filter(month == given_month) %>%
summarize(
num_days = as.numeric(max(day)),
total_tweets = as.numeric(n()),
most_retweeted = text[retweet_count == max(retweet_count)][1],
least_retweeted = text[retweet_count == min(retweet_count)][1],
most_favorited = text[favorite_count == max(favorite_count)][1],
least_favorited = text[favorite_count == min(favorite_count)][1]
)
avg_num_tweets <- round(avg_data$total_tweets / avg_data$num_days)
paste0("There were ", tweets, " tweets in ", date,
" 2017, with an average of ", avg_num_tweets, " tweets per day.")
}
month.name(1)
month.name
month.name[1]
runApp()
shinyApp(ui = my_ui, server = my_server)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweets <- group_by(twitter_data, month) %>%
dplyr::count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
dplyr::mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
runApp()
runApp()
View(daily_approval_and_frequency)
runApp()
View(daily_approval_and_frequency)
#Donald Trump's Twitter data from 2017
trump_tweets <- read_json("data/2017_Trump_Twitter.json", simplifyVector = TRUE)
trump_tweets <- trump_tweets %>%
select(created_at,
text,
retweet_count,
favorite_count,
is_retweet)
#Donald Trump's approval rating
trump_approval <- read.csv("data/approval_polllist.csv", stringsAsFactors = FALSE)
trump_approval <- trump_approval %>%
select(poll_id,
startdate,
enddate,
pollster,
grade,
samplesize,
approve,
disapprove,
url)
summary_twitter <- trump_tweets %>%
summarize(
"Total Tweets" = nrow(trump_tweets),
"Tweets from Trump" = nrow(trump_tweets) - sum(is_retweet),
"Average Retweet Count" = round(mean(retweet_count), digits = 0),
"Average Favorite Count" = mean(favorite_count)
)
#General Averages
# Returns the most common value from data set -- adapted from https://www.tutorialspoint.com/r/r_mean_median_mode.htm
find_mode <- function(data) {
unique <- unique(data)
unique[which.max(tabulate(match(data, unique)))]
}
average_tweets <-mean(trump_tweets$retweet_count)
pollsters <- as.data.frame(unique(trump_approval$pollster))
summary_approval <- trump_approval %>%
summarize(
"Total Pollsters" = nrow(pollsters),
"Most Common Grade" = find_mode(grade),
"Average Approval" = round(mean(approve), digits = 1),
"Max Approval" = round(max(approve), digits = 1),
"Min Approval" = round(min(approve), digits = 1),
"Standard Deviation of Approval" = round(sd(approve), digits = 1),
"Average Disapproval" = round(mean(disapprove), digits = 1),
"Max Dissapproval" = round(max(disapprove), digits = 1),
"Min Dissapproval" = round(min(disapprove), digits = 1),
"Standard Deviation of Dissapproval" = round(sd(disapprove), digits = 1)
)
average_12_31<- trump_approval[1343:1345,]
average_12_31<- mean(average_12_31$approve)
#Donald Trump's Twitter data from 2017
trump_tweets <- read_json("data/2017_Trump_Twitter.json", simplifyVector = TRUE)
trump_tweets <- trump_tweets %>%
select(created_at,
text,
retweet_count,
favorite_count,
is_retweet)
#Donald Trump's approval rating
trump_approval <- read.csv("data/approval_polllist.csv", stringsAsFactors = FALSE)
trump_approval <- trump_approval %>%
select(poll_id,
startdate,
enddate,
pollster,
grade,
samplesize,
approve,
disapprove,
url)
summary_twitter <- trump_tweets %>%
summarize(
"Total Tweets" = nrow(trump_tweets),
"Tweets from Trump" = nrow(trump_tweets) - sum(is_retweet),
"Average Retweet Count" = round(mean(retweet_count), digits = 0),
"Average Favorite Count" = mean(favorite_count)
)
#General Averages
# Returns the most common value from data set -- adapted from https://www.tutorialspoint.com/r/r_mean_median_mode.htm
find_mode <- function(data) {
unique <- unique(data)
unique[which.max(tabulate(match(data, unique)))]
}
average_tweets <-mean(trump_tweets$retweet_count)
pollsters <- as.data.frame(unique(trump_approval$pollster))
summary_approval <- trump_approval %>%
summarize(
"Total Pollsters" = nrow(pollsters),
"Most Common Grade" = find_mode(grade),
"Average Approval" = round(mean(approve), digits = 1),
"Max Approval" = round(max(approve), digits = 1),
"Min Approval" = round(min(approve), digits = 1),
"Standard Deviation of Approval" = round(sd(approve), digits = 1),
"Average Disapproval" = round(mean(disapprove), digits = 1),
"Max Dissapproval" = round(max(disapprove), digits = 1),
"Min Dissapproval" = round(min(disapprove), digits = 1),
"Standard Deviation of Dissapproval" = round(sd(disapprove), digits = 1)
)
average_12_31<- trump_approval[1343:1345,]
average_12_31<- mean(average_12_31$approve)
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
mutate(
Date = as.Date(trimws(paste(substr(created_at,4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarize(Frequency = sum(num))
# A data frame representing Trump's average daily approval ratings during 2017.
# The date in the new data frame is the same as the 'enddate' in the trump_approval data frame.
trump_daily_approval <- trump_approval %>%
mutate(
Date = as.Date(enddate, "%m/%d/%y")
) %>%
group_by(Date) %>%
summarize(approve = mean(approve),disapprove = mean(disapprove))
# A joined data frame with info from both of the above data frames
daily_approval_and_frequency <- inner_join(trump_tweet_frequency, trump_daily_approval, by = "Date")
approval_and_frequency_correlation <- cor(daily_approval_and_frequency$approve, daily_approval_and_frequency$Frequency)
approval_and_frequency_correlation <- cor(daily_approval_and_frequency$approval_rating, daily_approval_and_frequency$Frequency)
approval_and_frequency_correlation <- cor(daily_approval_and_frequency$approve, daily_approval_and_frequency$Frequency)
twitter_data <- as.data.frame(t(as.data.frame(strsplit(trump_tweets$created_at, " "), stringsAsFactors = FALSE)), stringsAsFactors = FALSE)
twitter_data <- twitter_data %>%
mutate(created_at = trump_tweets$created_at) %>%
left_join(trump_tweets, by = "created_at") %>%
select(V2, V3, V6, V4, created_at, text, retweet_count, favorite_count, is_retweet)
twitter_data <- twitter_data %>%
mutate(month = match(twitter_data$V2, month.abb), day = V3, year = V6, time = V4) %>%
select(month, day, year, time, created_at, text, retweet_count, favorite_count, is_retweet)
monthly_tweets <- group_by(twitter_data, month) %>%
count() %>%
as.data.frame(stringAsVariable = FALSE) %>%
mutate("Month" = month.name[month],
"Number of Tweets" = n) %>%
select("Month", "Number of Tweets")
monthly_tweet_count <- group_by(twitter_data, month) %>%
count()
get_monthly_info <- function(given_month) {
tweets <- monthly_tweet_count$n[monthly_tweet_count$month == given_month]
date <- month.name[given_month]
avg_data <- twitter_data %>%
filter(month == given_month) %>%
summarize(
num_days = as.numeric(max(day)),
total_tweets = as.numeric(n()),
most_retweeted = text[retweet_count == max(retweet_count)][1],
least_retweeted = text[retweet_count == min(retweet_count)][1],
most_favorited = text[favorite_count == max(favorite_count)][1],
least_favorited = text[favorite_count == min(favorite_count)][1]
)
avg_num_tweets <- round(avg_data$total_tweets / avg_data$num_days)
paste0("There were ", tweets, " tweets in ", date,
" 2017, with an average of ", avg_num_tweets, " tweets per day.")
}
runApp()
# A data frame representing Trump's average daily approval ratings during 2017.
# The date in the new data frame is the same as the 'enddate' in the trump_approval data frame.
trump_daily_approval <- trump_approval %>%
mutate(
Date = as.Date(enddate, "%m/%d/%y")
) %>%
group_by(Date) %>%
summarize(approve = mean(approve),disapprove = mean(disapprove))
View(trump_daily_approval)
View(daily_approval_and_frequency)
# A joined data frame with info from both of the above data frames
daily_approval_and_frequency <- inner_join(trump_tweet_frequency, trump_daily_approval, by = "Date")
approval_and_frequency_correlation <- cor(daily_approval_and_frequency$approve, daily_approval_and_frequency$Frequency)
runApp()
View(trump_tweet_frequency)
runApp()
View(trump_tweet_frequency)
# A data frame representing the number of daily tweets during 2017 by President Trump
trump_tweet_frequency <- trump_tweets %>%
mutate(
Date = as.Date(trimws(paste(substr(created_at, 4, 10), "2017")), "%b %d %Y")
, num = 1
) %>%
group_by(Date) %>%
summarize(Frequency = sum(num))
trump_tweet_frequency
View(trump_daily_approval)
runApp()
ggplot(data = plot.data) +
geom_point(mapping = aes(x = day, y = time, color = is_retweet)) +
scale_y_date(breaks = waiver()) +
labs(
title = paste("All of Donald Trump's Tweets in", month.name[input$month]),
y = "Time of Day (00:00 to 24:00)",
x = "Day of the Month",
color = "Is it a Retweet?"
)
runApp()
shiny::runApp()
runApp()
runApp()
